//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceDepartamentos
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Departamento", Namespace="http://schemas.datacontract.org/2004/07/ServiceDepartamentosSql")]
    public partial class Departamento : object
    {
        
        private int IdDeptField;
        
        private string LocalidadField;
        
        private string NombreField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdDept
        {
            get
            {
                return this.IdDeptField;
            }
            set
            {
                this.IdDeptField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Localidad
        {
            get
            {
                return this.LocalidadField;
            }
            set
            {
                this.LocalidadField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre
        {
            get
            {
                return this.NombreField;
            }
            set
            {
                this.NombreField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceDepartamentos.IServiceDepartamentos")]
    public interface IServiceDepartamentos
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDepartamentos/GetDepartamentos", ReplyAction="http://tempuri.org/IServiceDepartamentos/GetDepartamentosResponse")]
        System.Threading.Tasks.Task<ServiceDepartamentos.Departamento[]> GetDepartamentosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDepartamentos/BuscarDepartamento", ReplyAction="http://tempuri.org/IServiceDepartamentos/BuscarDepartamentoResponse")]
        System.Threading.Tasks.Task<ServiceDepartamentos.Departamento> BuscarDepartamentoAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IServiceDepartamentosChannel : ServiceDepartamentos.IServiceDepartamentos, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class ServiceDepartamentosClient : System.ServiceModel.ClientBase<ServiceDepartamentos.IServiceDepartamentos>, ServiceDepartamentos.IServiceDepartamentos
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceDepartamentosClient() : 
                base(ServiceDepartamentosClient.GetDefaultBinding(), ServiceDepartamentosClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IServiceDepartamentos.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceDepartamentosClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceDepartamentosClient.GetBindingForEndpoint(endpointConfiguration), ServiceDepartamentosClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceDepartamentosClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceDepartamentosClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceDepartamentosClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceDepartamentosClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceDepartamentosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<ServiceDepartamentos.Departamento[]> GetDepartamentosAsync()
        {
            return base.Channel.GetDepartamentosAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceDepartamentos.Departamento> BuscarDepartamentoAsync(int id)
        {
            return base.Channel.BuscarDepartamentoAsync(id);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceDepartamentos))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceDepartamentos))
            {
                return new System.ServiceModel.EndpointAddress("http://wcfservicedeptsrcdlt.azurewebsites.net/ServiceDepartamentos.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ServiceDepartamentosClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IServiceDepartamentos);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ServiceDepartamentosClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IServiceDepartamentos);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IServiceDepartamentos,
        }
    }
}
